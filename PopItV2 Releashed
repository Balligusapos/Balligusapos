--// Protected by Karrot 1.0 - discord.gg/vPY3XmntKU

return (function()local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIllllI=269;local karrotlIIlllIl=138;local karrotlIIlllII=3;local karrotlIIlIllI=function(a)local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';a=string.gsub(a,'[^'..b..'=]','')return a:gsub('.',function(c)if c=='='then return''end;local d,e='',b:find(c)-1;for f=6,1,-1 do d=d..(e%2^f-e%2^(f-1)>0 and'1'or'0')end;return d end):gsub('%d%d%d?%d?%d?%d?%d?%d?',function(c)if#c~=8 then return''end;local g=0;for f=1,8 do g=g+(c:sub(f,f)=='1'and 2^(8-f)or 0)end;return string.char(g)end)end;local karrotlIIlllIl=290;local karrotlIIlIlIl=(function()local function a(b)local c={}for d=0,255 do c[d]={}end;c[0][0]=b[1]*255;local e=1;for f=0,7 do for d=0,e-1 do for g=0,e-1 do local h=c[d][g]-b[1]*e;c[d][g+e]=h+b[2]*e;c[d+e][g]=h+b[3]*e;c[d+e][g+e]=h+b[4]*e end end;e=e*2 end;return c end;local i=a{0,1,1,0}local function j(self,k)local l,d,g=self.S,self.i,self.j;local m={}local n=string.char;for o=1,k do d=(d+1)%256;g=(g+l[d])%256;l[d],l[g]=l[g],l[d]m[o]=n(l[(l[d]+l[g])%256])end;self.i,self.j=d,g;return table.concat(m)end;local function p(self,q)local r=j(self,#q)local s={}local t=string.byte;local n=string.char;for d=1,#q do s[d]=n(i[t(q,d)][t(r,d)])end;return table.concat(s)end;local function u(self,v)local l=self.S;local g,w=0,#v;local t=string.byte;for d=0,255 do g=(g+l[d]+t(v,d%w+1))%256;l[d],l[g]=l[g],l[d]end end;function new(v)local l={}local s={S=l,i=0,j=0,generate=j,cipher=p,schedule=u}for d=0,255 do l[d]=d end;if v then s:schedule(v)end;return s end;return new end)();local fev=getfenv or function()return _ENV end;local karrotlIIlIlII=(function()if not bit then local bit_=nil pcall(function()bit_=require('bit') end)bit=bit_ end local bit=bit or bit32 or(function()local a={_TYPE='module',_NAME='bit.numberlua',_VERSION='0.3.1.20120131'}local b=math.floor;local c=2^32;local d=c-1;local function e(f)local g={}local h=setmetatable({},g)function g:__index(i)local j=f(i)h[i]=j;return j end;return h end;local function k(h,l)local function m(n,o)local p,q=0,1;while n~=0 and o~=0 do local r,s=n%l,o%l;p=p+h[r][s]*q;n=(n-r)/l;o=(o-s)/l;q=q*l end;p=p+(n+o)*q;return p end;return m end;local function t(h)local u=k(h,2^1)local v=e(function(n)return e(function(o)return u(n,o)end)end)return k(v,2^(h.n or 1))end;function a.tobit(w)return w%2^32 end;a.bxor=t{[0]={[0]=0,[1]=1},[1]={[0]=1,[1]=0},n=4}local x=a.bxor;function a.bnot(n)return d-n end;local y=a.bnot;function a.band(n,o)return(n+o-x(n,o))/2 end;local z=a.band;function a.bor(n,o)return d-z(d-n,d-o)end;local A=a.bor;local B,C;function a.rshift(n,D)if D<0 then return B(n,-D)end;return b(n%2^32/2^D)end;C=a.rshift;function a.lshift(n,D)if D<0 then return C(n,-D)end;return n*2^D%2^32 end;B=a.lshift;function a.tohex(w,E)E=E or 8;local F;if E<=0 then if E==0 then return''end;F=true;E=-E end;w=z(w,16^E-1)return('%0'..E..(F and'X'or'x')):format(w)end;local G=a.tohex;function a.extract(E,H,I)I=I or 1;return z(C(E,H),2^I-1)end;local J=a.extract;function a.replace(E,j,H,I)I=I or 1;local K=2^I-1;j=z(j,K)local L=y(B(K,H))return z(E,L)+B(j,H)end;local M=a.replace;function a.bswap(w)local n=z(w,0xff)w=C(w,8)local o=z(w,0xff)w=C(w,8)local N=z(w,0xff)w=C(w,8)local O=z(w,0xff)return B(B(B(n,8)+o,8)+N,8)+O end;local P=a.bswap;function a.rrotate(w,D)D=D%32;local Q=z(w,2^D-1)return C(w,D)+B(Q,32-D)end;local R=a.rrotate;function a.lrotate(w,D)return R(w,-D)end;local S=a.lrotate;a.rol=a.lrotate;a.ror=a.rrotate;function a.arshift(w,D)local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end;local U=a.arshift;function a.btest(w,V)return z(w,V)~=0 end;a.bit32={}local function W(w)return(-1-w)%c end;a.bit32.bnot=W;local function X(n,o,N,...)local T;if o then n=n%c;o=o%c;T=x(n,o)if N then T=X(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bxor=X;local function Y(n,o,N,...)local T;if o then n=n%c;o=o%c;T=(n+o-x(n,o))/2;if N then T=Y(T,N,...)end;return T elseif n then return n%c else return d end end;a.bit32.band=Y;local function Z(n,o,N,...)local T;if o then n=n%c;o=o%c;T=d-z(d-n,d-o)if N then T=Z(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bor=Z;function a.bit32.btest(...)return Y(...)~=0 end;function a.bit32.lrotate(w,D)return S(w%c,D)end;function a.bit32.rrotate(w,D)return R(w%c,D)end;function a.bit32.lshift(w,D)if D>31 or D<-31 then return 0 end;return B(w%c,D)end;function a.bit32.rshift(w,D)if D>31 or D<-31 then return 0 end;return C(w%c,D)end;function a.bit32.arshift(w,D)w=w%c;if D>=0 then if D>31 then return w>=0x80000000 and d or 0 else local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end else return B(w,-D)end end;function a.bit32.extract(w,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;return J(w,H,...)end;function a.bit32.replace(w,j,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;j=j%c;return M(w,j,H,...)end;a.bit={}function a.bit.tobit(w)w=w%c;if w>=0x80000000 then w=w-c end;return w end;local _=a.bit.tobit;function a.bit.tohex(w,...)return G(w%c,...)end;function a.bit.bnot(w)return _(y(w%c))end;local function a0(n,o,N,...)if N then return a0(a0(n,o),N,...)elseif o then return _(A(n%c,o%c))else return _(n)end end;a.bit.bor=a0;local function a1(n,o,N,...)if N then return a1(a1(n,o),N,...)elseif o then return _(z(n%c,o%c))else return _(n)end end;a.bit.band=a1;local function a2(n,o,N,...)if N then return a2(a2(n,o),N,...)elseif o then return _(x(n%c,o%c))else return _(n)end end;a.bit.bxor=a2;function a.bit.lshift(w,E)return _(B(w%c,E%32))end;function a.bit.rshift(w,E)return _(C(w%c,E%32))end;function a.bit.arshift(w,E)return _(U(w%c,E%32))end;function a.bit.rol(w,E)return _(S(w%c,E%32))end;function a.bit.ror(w,E)return _(R(w%c,E%32))end;function a.bit.bswap(w)return _(P(w%c))end;return a end)()local unpack=table.unpack or unpack;local a3;local a4;local a5;local a6=50;local a7={[22]=18,[31]=8,[33]=28,[0]=3,[1]=13,[2]=23,[26]=33,[12]=1,[13]=6,[14]=10,[15]=16,[16]=20,[17]=26,[18]=30,[19]=36,[3]=0,[4]=2,[5]=4,[6]=7,[7]=9,[8]=12,[9]=14,[10]=17,[20]=19,[21]=22,[23]=24,[24]=27,[25]=29,[27]=32,[32]=34,[34]=37,[11]=5,[28]=11,[29]=15,[30]=21,[35]=25,[36]=31,[37]=35}local a8={[0]='ABC','ABx','ABC','ABC','ABC','ABx','ABC','ABx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','AsBx','ABC','ABC','ABC','ABx','ABC'}local a9={[0]={b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgR'},{b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgU'},{b='OpArgR',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgN',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgN',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgU',c='OpArgN'}}local function aa(ab,s,e,d)local ac=0;for i=s,e,d do ac=ac+string.byte(ab,i,i)*256^(i-s)end;return ac end;local function ad(ae,af,ag,ah)local ai=(-1)^bit.rshift(ah,7)local aj=bit.rshift(ag,7)+bit.lshift(bit.band(ah,0x7F),1)local ak=ae+bit.lshift(af,8)+bit.lshift(bit.band(ag,0x7F),16)local al=1;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7F then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-127)*(1+al/2^23)end;local function am(ae,af,ag,ah,an,ao,ap,aq)local ai=(-1)^bit.rshift(aq,7)local aj=bit.lshift(bit.band(aq,0x7F),4)+bit.rshift(ap,4)local ak=bit.band(ap,0x0F)*2^48;local al=1;ak=ak+ao*2^40+an*2^32+ah*2^24+ag*2^16+af*2^8+ae;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7FF then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-1023)*(al+ak/2^52)end;local function ar(ab,s,e)return aa(ab,s,e-1,1)end;local function as(ab,s,e)return aa(ab,e-1,s,-1)end;local function at(ab,s)return ad(string.byte(ab,s,s+3))end;local function au(ab,s)local ae,af,ag,ah=string.byte(ab,s,s+3)return ad(ah,ag,af,ae)end;local function av(ab,s)return am(string.byte(ab,s,s+7))end;local function aw(ab,s)local ae,af,ag,ah,an,ao,ap,aq=string.byte(ab,s,s+7)return am(aq,ap,ao,an,ah,ag,af,ae)end;local ax={[4]={little=at,big=au},[8]={little=av,big=aw}}local function ay(S)local az=S.index;local aA=string.byte(S.source,az,az)S.index=az+1;return aA end;local function aB(S,aC)local aD=S.index+aC;local aE=string.sub(S.source,S.index,aD-1)S.index=aD;return aE end;local function aF(S)local aC=S:s_szt()local aE;if aC~=0 then aE=string.sub(aB(S,aC),1,-2)end;return aE end;local function aG(aC,aH)return function(S)local aD=S.index+aC;local aI=aH(S.source,S.index,aD)S.index=aD;return aI end end;local function aJ(aC,aH)return function(S)local aK=aH(S.source,S.index)S.index=S.index+aC;return aK end end;local function aL(S)local aM=S:s_int()local aN={}for i=1,aM do local aO=S:s_ins()local aP=bit.band(aO,0x3F)local aQ=a8[aP]local aR=a9[aP]local aS={value=aO,op=a7[aP],A=bit.band(bit.rshift(aO,6),0xFF)}if aQ=='ABC'then aS.B=bit.band(bit.rshift(aO,23),0x1FF)aS.C=bit.band(bit.rshift(aO,14),0x1FF)aS.is_KB=aR.b=='OpArgK'and aS.B>0xFF;aS.is_KC=aR.c=='OpArgK'and aS.C>0xFF elseif aQ=='ABx'then aS.Bx=bit.band(bit.rshift(aO,14),0x3FFFF)aS.is_K=aR.b=='OpArgK'elseif aQ=='AsBx'then aS.sBx=bit.band(bit.rshift(aO,14),0x3FFFF)-131071 end;aN[i]=aS end;return aN end;local function aT(S)local aM=S:s_int()local aU={}for i=1,aM do local aV=ay(S)local k;if aV==1 then k=ay(S)~=0 elseif aV==3 then k=S:s_num()elseif aV==4 then k=aF(S)end;aU[i]=k end;return aU end;local function aW(S,ab)local aM=S:s_int()local aX={}for i=1,aM do aX[i]=a5(S,ab)end;return aX end;local function aY(S)local aM=S:s_int()local aZ={}for i=1,aM do aZ[i]=S:s_int()end;return aZ end;local function a_(S)local aM=S:s_int()local b0={}for i=1,aM do b0[i]={varname=aF(S),startpc=S:s_int(),endpc=S:s_int()}end;return b0 end;local function b1(S)local aM=S:s_int()local b2={}for i=1,aM do b2[i]=aF(S)end;return b2 end;function a5(S,b3)local b4={}local ab=aF(S)or b3;b4.source=ab;S:s_int()S:s_int()b4.numupvals=ay(S)b4.numparams=ay(S)ay(S)ay(S)b4.code=aL(S)b4.const=aT(S)b4.subs=aW(S,ab)b4.lines=aY(S)a_(S)b1(S)for _,v in ipairs(b4.code)do if v.is_K then v.const=b4.const[v.Bx+1]else if v.is_KB then v.const_B=b4.const[v.B-0xFF]end;if v.is_KC then v.const_C=b4.const[v.C-0xFF]end end end;return b4 end;function a3(ab)local b5;local b6;local b7;local b8;local b9;local ba;local bb;local bc={index=1,source=ab}assert(aB(bc,4)=='\27Lua','invalid Lua signature')assert(ay(bc)==0x51,'invalid Lua version')assert(ay(bc)==0,'invalid Lua format')b6=ay(bc)~=0;b7=ay(bc)b8=ay(bc)b9=ay(bc)ba=ay(bc)bb=ay(bc)~=0;b5=b6 and ar or as;bc.s_int=aG(b7,b5)bc.s_szt=aG(b8,b5)bc.s_ins=aG(b9,b5)if bb then bc.s_num=aG(ba,b5)elseif ax[ba]then bc.s_num=aJ(ba,ax[ba][b6 and'little'or'big'])else error('unsupported float size')end;return a5(bc,'@virtual')end;local function bd(be,bf)for i,bg in pairs(be)do if bg.index>=bf then bg.value=bg.store[bg.index]bg.store=bg;bg.index='value'be[i]=nil end end end;local function bh(be,bf,bi)local bj=be[bf]if not bj then bj={index=bf,store=bi}be[bf]=bj end;return bj end;local function bk(...)return select('#',...),{...}end;local function bl(bm,bn)local ab=bm.source;local bo=bm.lines[bm.pc-1]local b3,bp,bq=string.match(bn,'^(.-):(%d+):%s+(.+)')local br='%s:%i: [%s:%i] %s'bo=bo or'0'b3=b3 or'?'bp=bp or'0'bq=bq or bn;error(string.format(br,ab,bo,b3,bp,bq),0)end;local function bs(bm)local aN=bm.code;local bt=bm.subs;local bu=bm.env;local bv=bm.upvals;local bw=bm.varargs;local bx=-1;local by={}local bi=bm.stack;local bz=bm.pc;while true do local bA=aN[bz]local aP=bA.op;bz=bz+1;if aP<18 then if aP<8 then if aP<3 then if aP<1 then for i=bA.A,bA.B do bi[i]=nil end elseif aP>1 then local bg=bv[bA.B]bi[bA.A]=bg.store[bg.index]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB+bC end elseif aP>3 then if aP<6 then if aP>4 then local A=bA.A;local B=bA.B;local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[A+1]=bi[B]bi[A]=bi[B][bf]else bi[bA.A]=bu[bA.const]end elseif aP>6 then local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[bA.A]=bi[bA.B][bf]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB-bC end else bi[bA.A]=bi[bA.B]end elseif aP>8 then if aP<13 then if aP<10 then bu[bA.const]=bi[bA.A]elseif aP>10 then if aP<12 then local A=bA.A;local B=bA.B;local C=bA.C;local bD;local bE,bF;if B==0 then bD=bx-A else bD=B-1 end;bE,bF=bk(bi[A](unpack(bi,A+1,A+bD)))if C==0 then bx=A+bE-1 else bE=C-1 end;for i=1,bE do bi[A+i-1]=bF[i]end else local bg=bv[bA.B]bg.store[bg.index]=bi[bA.A]end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB*bC end elseif aP>13 then if aP<16 then if aP>14 then local A=bA.A;local B=bA.B;local bD;if B==0 then bD=bx-A else bD=B-1 end;bd(by,0)return bk(bi[A](unpack(bi,A+1,A+bD)))else local bf,bG;if bA.is_KB then bf=bA.const_B else bf=bi[bA.B]end;if bA.is_KC then bG=bA.const_C else bG=bi[bA.C]end;bi[bA.A][bf]=bG end elseif aP>16 then bi[bA.A]={}else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB/bC end else bi[bA.A]=bA.const end else local A=bA.A;local bH=bi[A+2]local bf=bi[A]+bH;local bI=bi[A+1]local bJ;if bH==math.abs(bH)then bJ=bf<=bI else bJ=bf>=bI end;if bJ then bi[bA.A]=bf;bi[bA.A+3]=bf;bz=bz+bA.sBx end end elseif aP>18 then if aP<28 then if aP<23 then if aP<20 then bi[bA.A]=#bi[bA.B]elseif aP>20 then if aP<22 then local A=bA.A;local B=bA.B;local bK={}local aM;if B==0 then aM=bx-A+1 else aM=B-1 end;for i=1,aM do bK[i]=bi[A+i-1]end;bd(by,0)return aM,bK else local aE=bi[bA.B]for i=bA.B+1,bA.C do aE=aE..bi[i]end;bi[bA.A]=aE end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB%bC end elseif aP>23 then if aP<26 then if aP>24 then bd(by,bA.A)else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB==bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 end elseif aP>26 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB^bC end else bi[bA.A]=bA.B~=0;if bA.C~=0 then bz=bz+1 end end elseif aP>28 then if aP<33 then if aP<30 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<=bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 elseif aP>30 then if aP<32 then local aX=bt[bA.Bx+1]local bL=aX.numupvals;local bM;if bL~=0 then bM={}for i=1,bL do local bN=aN[bz+i-1]if bN.op==a7[0]then bM[i-1]=bh(by,bN.B,bi)elseif bN.op==a7[4]then bM[i-1]=bv[bN.B]end end;bz=bz+bL end;bi[bA.A]=a4(aX,bu,bM)else local A=bA.A;local B=bA.B;if not bi[B]==(bA.C~=0)then bz=bz+1 else bi[A]=bi[B]end end else bi[bA.A]=-bi[bA.B]end elseif aP>33 then if aP<36 then if aP>34 then local A=bA.A;local aM=bA.B;if aM==0 then aM=bw.size;bx=A+aM-1 end;for i=1,aM do bi[A+i-1]=bw.list[i]end else local A=bA.A;local bO,bI,bH;bO=assert(tonumber(bi[A]),'`for` initial value must be a number')bI=assert(tonumber(bi[A+1]),'`for` limit must be a number')bH=assert(tonumber(bi[A+2]),'`for` step must be a number')bi[A]=bO-bH;bi[A+1]=bI;bi[A+2]=bH;bz=bz+bA.sBx end elseif aP>36 then local A=bA.A;local C=bA.C;local aM=bA.B;local bP=bi[A]local bQ;if aM==0 then aM=bx-A end;if C==0 then C=bA[bz].value;bz=bz+1 end;bQ=(C-1)*a6;for i=1,aM do bP[i+bQ]=bi[A+i]end else bi[bA.A]=not bi[bA.B]end else if not bi[bA.A]==(bA.C~=0)then bz=bz+1 end end else local A=bA.A;local aH=bi[A]local bR=bi[A+1]local bf=bi[A+2]local bS=A+3;local bK;bi[bS+2]=bf;bi[bS+1]=bR;bi[bS]=aH;bK={aH(bR,bf)}for i=1,bA.C do bi[bS+i-1]=bK[i]end;if bi[bS]~=nil then bi[A+2]=bi[bS]else bz=bz+1 end end else bz=bz+bA.sBx end;bm.pc=bz end end;function a4(bR,bu,b2)local bT=bR.code;local bU=bR.subs;local bV=bR.lines;local bW=bR.source;local bX=bR.numparams;local function bY(...)local bi={}local bZ={}local b_=0;local c0,c1=bk(...)local bm;local c2,bn,bK;for i=1,bX do bi[i-1]=c1[i]end;if bX<c0 then b_=c0-bX;for i=1,b_ do bZ[i]=c1[bX+i]end end;bm={varargs={list=bZ,size=b_},code=bT,subs=bU,lines=bV,source=bW,env=bu,upvals=b2,stack=bi,pc=1}c2,bn,bK=pcall(bs,bm,...)if c2 then return unpack(bK,1,bn)else bl(bm,bn)end;return end;return bY end;return function(c3,bu)return a4(a3(c3),bu or fev(0))end end)();local karrotlIIllIIl='\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110';local karrotlIIlIIIl="\104\78\90\56\110\71\120\101\74\113\78\48\106\80\111\57\112\54\118\86\47\74\73\69\106\115\55\72\101\88\47\51\102\72\66\71\88\119\116\99\48\98\50\47\47\80\104\87\104\66\101\118\66\72\70\85\109\112\110\80\108\86\87\106\101\73\57\70\111\88\48\104\99\109\47\121\67\104\83\108\108\78\69\90\89\75\51\106\101\66\57\70\86\88\68\84\51\116\109\80\48\118\71\49\118\109\88\121\122\47\75\69\55\71\67\52\102\88\76\55\54\74\84\101\73\76\85\48\55\82\104\53\121\89\97\77\121\43\80\89\76\117\49\102\77\72\56\75\109\121\80\104\47\55\56\118\49\104\85\109\71\101\67\67\51\74\68\73\111\66\76\114\83\78\117\116\115\68\109\121\70\81\66\55\121\70\50\67\74\47\52\77\112\43\84\100\97\52\109\69\69\99\117\68\100\104\112\51\53\122\111\51\76\90\99\70\116\98\69\87\111\109\75\89\48\111\53\88\77\74\111\82\110\75\71\67\118\56\101\116\82\113\99\120\77\51\89\70\87\88\111\108\119\90\82\65\108\97\73\112\52\108\47\109\104\67\69\66\43\114\86\66\85\116\116\77\121\108\120\49\52\121\57\75\83\57\115\51\77\122\104\100\70\90\81\84\43\104\99\122\100\120\103\68\65\69\49\109\79\74\48\57\113\120\116\55\109\55\69\67\120\47\114\121\107\87\97\83\79\65\75\71\50\83\73\77\49\47\103\75\66\47\86\74\120\109\115\89\101\88\83\102\117\107\57\106\110\53\49\65\57\47\106\101\88\79\108\54\51\84\107\80\72\88\48\65\120\89\115\51\105\88\104\49\118\87\98\101\49\43\105\97\85\65\83\120\85\87\97\49\90\79\113\82\80\112\118\100\74\101\50\100\104\76\100\81\103\57\119\56\51\113\104\75\65\80\108\80\108\86\113\114\121\86\110\75\47\103\83\90\69\54\88\115\122\49\56\108\114\80\88\100\101\57\117\76\100\69\47\98\115\88\50\100\118\110\80\112\72\52\79\116\47\97\98\97\118\52\112\51\109\116\120\55\80\50\80\52\84\101\68\72\109\85\52\120\88\67\56\80\115\50\51\117\48\115\117\43\66\54\118\69\108\116\106\72\114\48\88\112\114\106\109\122\83\74\49\53\69\99\97\97\119\105\118\57\121\66\87\83\49\76\106\50\84\43\112\80\102\116\111\102\80\48\111\77\66\90\78\120\83\48\76\68\70\47\105\118\99\111\53\89\50\120\112\54\122\105\106\110\78\119\81\112\109\69\73\86\114\55\56\73\66\69\101\87\106\54\55\119\121\53\110\57\120\79\114\76\115\67\79\112\81\81\97\43\76\43\111\90\122\97\76\108\107\112\98\75\50\106\50\56\121\66\112\89\43\75\57\70\109\76\47\116\116\82\88\76\79\98\117\81\76\116\47\84\90\113\56\68\81\52\79\115\72\101\117\86\65\102\112\56\70\99\100\50\50\108\120\51\82\67\115\118\106\84\47\66\100\70\114\66\76\117\103\87\51\117\52\115\85\104\113\66\120\107\115\80\102\55\87\50\52\47\76\81\107\90\56\84\112\119\121\68\88\83\104\52\105\48\115\76\104\116\73\75\74\100\51\75\65\79\118\89\98\67\68\115\120\98\54\53\70\105\101\52\104\99\74\98\117\106\104\67\114\83\67\122\79\55\80\103\66\51\78\54\51\67\52\108\87\106\88\47\115\65\78\97\51\81\108\53\102\75\117\87\51\75\47\101\114\89\78\86\98\84\48\51\84\69\100\53\117\73\70\47\43\103\122\89\115\50\103\85\67\110\72\119\103\67\47\75\70\114\77\121\75\88\103\112\83\88\80\120\47\112\86\86\116\109\75\103\120\99\119\73\51\81\85\83\77\73\48\73\107\67\97\78\110\106\122\112\74\51\86\87\86\87\87\118\89\74\113\43\57\110\49\102\108\99\110\68\47\82\114\81\108\73\112\106\74\108\83\97\103\86\84\119\47\77\116\74\116\47\72\71\52\76\85\88\43\121\108\55\111\118\113\70\99\122\53\65\48\86\65\72\69\77\50\54\83\55\85\43\103\82\48\69\106\100\119\82\48\76\101\47\107\71\43\111\86\77\54\49\57\103\67\89\53\111\43\104\78\73\104\54\88\56\80\66\84\111\90\67\103\118\75\67\43\49\107\98\51\82\112\75\52\104\121\117\88\84\74\102\115\118\57\78\56\101\90\117\109\102\69\69\111\48\90\73\50\97\48\49\100\86\49\88\54\90\49\90\119\56\116\71\116\43\119\116\113\112\117\116\101\97\101\84\115\105\51\118\50\104\109\68\97\65\85\112\115\113\103\100\48\75\49\119\71\97\66\110\73\71\50\87\89\79\74\67\76\120\113\97\112\54\43\43\57\119\80\97\80\108\87\103\114\88\74\88\85\57\73\56\86\110\112\82\51\99\57\89\69\87\79\110\78\113\112\52\103\54\52\118\100\103\88\120\51\83\112\107\86\87\110\54\68\86\121\115\89\49\100\80\82\76\66\104\87\57\83\48\52\67\101\88\84\109\97\110\48\47\49\107\49\84\121\75\75\113\112\65\88\75\70\65\68\56\76\77\47\86\119\48\81\54\119\100\75\80\110\50\83\75\109\57\89\88\118\122\49\110\118\56\84\48\69\90\108\65\99\115\49\82\70\71\85\52\120\120\77\54\109\116\101\120\83\78\69\111\70\67\88\75\79\76\110\90\98\66\47\74\78\120\122\54\57\53\55\111\57\55\47\119\67\80\117\54\70\103\105\50\85\111\103\104\121\98\54\53\118\109\50\70\70\76\54\49\87\72\104\101\99\74\85\109\84\73\72\117\43\68\103\111\116\49\120\73\104\51\51\112\53\108\79\121\53\100\117\122\66\106\110\79\107\106\70\47\97\117\87\67\121\111\115\71\122\117\99\80\120\109\119\113\84\49\108\105\99\79\77\110\108\66\76\104\97\75\120\113\72\65\100\55\102\108\83\72\102\105\106\82\69\76\82\70\52\74\87\108\120\105\103\104\100\120\53\48\90\98\48\120\111\87\121\74\100\87\86\69\103\85\103\110\102\75\109\97\84\90\109\101\76\107\70\88\112\50\80\77\118\67\98\81\107\67\103\97\65\68\120\104\83\75\48\119\118\110\57\65\101\67\118\110\102\115\68\70\65\113\82\53\99\75\112\103\117\107\81\112\83\107\119\47\112\81\65\104\55\102\113\97\74\80\119\115\119\108\69\121\52\108\84\55\99\119\115\75\52\105\71\76\52\82\107\71\88\47\113\68\66\90\54\43\99\43\112\117\99\119\112\72\71\81\87\54\76\56\71\84\43\114\68\103\84\115\73\73\76\108\98\101\49\74\121\104\103\49\102\89\78\122\50\103\55\108\121\98\53\54\51\66\116\81\88\119\50\68\112\47\76\49\112\89\103\109\65\113\114\87\48\85\83\81\118\66\72\57\84\85\117\52\47\81\114\74\119\73\70\86\87\50\55\72\72\47\80\47\55\75\109\50\116\98\72\65\76\53\87\122\65\114\49\79\55\50\43\114\52\50\78\110\72\101\105\116\70\107\120\84\67\102\77\68\83\51\122\86\90\112\113\70\57\89\66\49\57\79\116\103\107\87\88\114\87\114\70\85\81\99\71\76\52\83\116\111\78\52\105\86\90\114\57\74\90\47\102\68\54\99\79\57\121\122\83\85\66\48\75\84\98\97\76\85\51\119\118\99\90\82\68\81\97\81\57\75\53\69\80\75\43\81\110\74\101\81\90\73\108\112\57\87\70\75\73\114\80\51\84\111\68\118\79\66\106\54\97\103\56\52\107\101\77\66\47\66\114\106\80\104\115\56\66\114\57\66\56\78\98\102\87\110\100\83\77\52\86\52\110\118\89\52\104\113\88\89\87\97\74\116\121\117\115\120\106\48\87\65\121\80\88\107\109\53\49\68\82\119\103\119\47\65\87\47\101\112\111\55\90\77\73\103\82\49\104\84\101\51\104\52\71\104\121\66\99\117\114\74\97\55\112\112\47\48\52\69\121\49\49\119\106\54\50\73\57\111\78\77\117\67\75\110\66\118\115\97\118\109\68\56\49\88\112\53\87\68\107\111\48\83\56\85\54\97\119\89\51\100\54\112\101\107\69\88\43\110\115\121\75\69\57\54\105\74\82\73\111\122\118\88\82\75\71\70\79\104\77\84\83\120\43\78\89\81\85\105\56\78\49\117\116\54\108\110\69\116\117\84\66\77\106\56\117\78\86\74\72\90\122\120\118\106\103\86\57\122\98\111\76\79\83\100\71\85\102\53\115\107\97\65\47\84\53\118\100\77\81\81\51\48\119\109\103\87\108\53\107\117\73\50\51\49\51\51\80\73\57\113\81\76\56\102\77\109\115\56\120\108\120\71\47\101\108\49\75\75\100\65\101\78\51\89\111\116\56\50\103\108\106\53\122\81\79\55\80\121\73\83\108\79\50\68\66\70\77\112\119\51\56\74\107\117\76\54\66\108\104\69\110\97\112\98\112\88\113\97\86\115\55\48\67\118\53\118\57\106\118\88\76\76\107\87\49\118\82\105\121\114\109\86\119\81\65\56\87\50\47\43\65\117\65\65\53\119\111\74\90\76\114\121\106\56\74\66\120\90\99\71\116\104\54\118\120\90\120\78\117\85\66\70\55\98\113\68\57\98\86\120\77\110\122\108\120\53\72\108\109\98\43\53\83\109\47\80\106\56\52\100\87\71\76\52\99\66\68\72\43\107\86\107\48\70\88\74\67\89\103\115\68\105\81\54\69\98\81\85\65\98\57\67\116\110\79\74\107\116\104\54\81\47\80\110\114\67\65\117\99\87\78\120\54\88\76\101\114\120\110\53\84\120\70\48\117\67\50\43\69\102\82\86\76\71\75\105\100\43\101\55\88\104\112\86\111\55\85\85\67\56\47\55\65\73\107\122\66\87\111\119\119\57\103\54\120\110\82\116\88\103\110\108\111\100\109\105\109\87\101\50\122\65\86\82\86\119\106\90\113\118\106\48\57\97\115\88\57\84\57\82\86\101\102\87\90\65\121\43\72\117\115\113\73\48\98\119\103\90\87\88\82\55\111\73\72\57\121\55\118\68\72\80\73\83\122\53\50\108\75\50\97\82\68\113\54\53\53\102\78\108\108\71\47\110\89\83\88\78\113\102\101\55\89\69\72\103\101\80\85\78\81\73\86\52\103\119\107\72\87\54\121\111\120\86\119\90\57\79\78\79\81\76\57\67\113\53\85\121\70\121\99\85\110\69\69\111\68\86\112\102\78\101\121\98\115\43\77\108\68\102\51\99\86\65\103\115\119\121\70\57\109\71\43\81\111\77\120\73\110\89\104\65\111\68\70\111\76\117\68\89\67\116\77\97\88\72\98\122\101\77\43\65\89\119\70\101\49\90\72\85\97\47\109\57\98\79\76\75\88\85\99\67\110\102\86\114\87\114\56\76\79\121\107\121\119\80\103\97\103\101\88\107\48\89\82\75\43\88\114\77\79\121\118\56\79\87\107\52\71\69\88\105\78\49\111\78\72\53\120\68\70\56\110\76\113\107\99\76\85\122\71\112\117\73\78\98\53\76\102\107\105\113\88\74\103\97\49\97\98\120\56\79\65\75\65\54\79\69\81\102\113\103\70\104\79\74\68\114\47\54\74\108\74\66\107\114\75\65\69\48\103\83\80\111\112\84\90\49\103\115\88\97\111\117\104\75\109\116\43\88\80\109\103\74\52\84\78\88\51\118\81\48\119\77\105\73\53\75\77\83\121\109\85\112\113\101\55\55\49\49\90\86\116\116\52\68\117\54\43\87\109\47\73\67\48\120\55\98\82\77\89\117\116\87\88\56\53\67\50\111\69\108\104\54\83\80\74\106\57\57\72\107\55\121\73\80\79\118\98\68\52\103\111\80\72\108\70\86\100\121\121\67\100\75\119\70\101\82\122\106\103\82\118\77\84\51\79\73\99\84\82\48\76\70\55\115\66\79\111\82\98\68\85\65\118\57\72\99\81\88\56\49\57\103\86\70\74\77\54\65\47\105\81\71\112\121\43\108\99\98\55\102\85\70\88\56\111\74\79\71\73\111\51\100\43\118\51\110\78\119\83\88\74\118\52\70\87\114\48\118\114\100\53\98\76\56\81\115\52\121\84\102\105\119\108\119\66\99\65\98\79\111\88\80\108\117\55\76\116\69\101\104\75\111\51\51\57\115\108\47\75\66\99\51\107\52\78\108\78\99\76\79\106\87\71\104\109\106\70\98\75\97\78\57\48\85\51\81\83\98\113\56\79\105\70\88\112\71\89\112\118\65\43\83\74\110\70\67\106\112\83\109\112\53\74\99\98\76\66\120\120\117\100\104\103\100\102\56\80\118\85\85\43\97\65\68\90\122\107\48\101\43\77\90\54\75\78\102\115\57\114\103\113\112\79\113\72\106\122\113\109\113\100\118\72\67\71\90\79\119\82\66\81\71\49\98\104\101\115\49\107\121\83\105\47\121\54\55\78\78\73\88\97\67\89\109\52\54\66\88\99\108\54\54\119\66\73\121\47\110\105\116\85\89\57\52\76\85\68\68\70\57\120\101\89\109\116\66\81\101\121\119\82\52\81\82\74\71\112\122\73\122\86\97\65\82\119\70\50\80\101\110\110\107\72\48\70\70\69\76\88\52\90\49\102\57\90\67\100\51\56\83\100\117\108\68\57\69\71\122\85\70\87\56\103\68\56\67\72\75\90\54\71\117\76\98\104\98\49\56\117\111\105\72\81\69\103\113\71\116\81\102\67\111\82\81\118\119\48\54\69\114\102\50\54\110\106\106\114\80\82\53\117\108\85\88\107\52\78\77\97\54\108\73\75\87\57\86\90\55\57\67\89\55\118\66\56\116\70\49\107\107\65\104\52\68\122\75\75\70\105\90\97\75\69\79\78\102\71\117\76\72\69\72\50\48\67\79\50\87\49\119\107\52\110\52\67\104\71\53\67\122\72\43\83\56\54\76\50\83\113\98\87\98\115\106\106\78\47\120\100\73\53\116\85\76\77\76\114\116\81\122\66\50\98\121\49\103\120\107\109\86\100\111\73\47\119\97\51\80\120\67\65\122\69\113\86\53\76\75\106\106\89\83\55\54\112\56\83\78\97\118\107\82\72\88\109\73\119\102\84\105\53\56\56\118\52\76\106\102\98\99\73\107\76\68\119\53\74\114\109\122\79\103\106\77\107\115\87\114\57\119\100\106\87\85\121\50\67\101\119\110\43\69\81\105\70\122\68\83\67\86\107\71\71\65\103\98\109\111\112\114\121\69\80\72\66\48\85\49\109\81\52\55\65\68\65\121\115\120\57\69\67\113\84\107\47\115\85\82\111\73\67\48\108\99\114\49\120\51\88\90\69\47\106\65\54\90\102\99\98\112\121\99\81\98\101\50\73\86\69\101\71\85\100\54\108\120\101\86\109\120\80\104\49\97\57\72\68\99\55\85\52\83\69\103\115\106\105\90\78\122\55\100\74\88\105\121\69\53\101\49\116\55\70\117\75\121\79\75\53\47\56\112\48\111\78\87\120\108\120\52\104\76\100\52\80\110\83\121\97\74\84\48\43\88\88\118\115\73\77\103\48\48\112\68\98\89\67\65\103\84\112\57\50\107\119\73\69\80\70\102\77\74\55\89\67\107\116\67\43\121\51\120\117\107\110\50\110\103\73\65\56\82\73\53\87\97\114\86\114\43\78\110\109\115\107\78\112\76\88\121\113\107\112\67\98\89\69\74\116\104\81\122\101\102\116\84\51\80\118\43\84\120\72\77\121\117\47\80\53\49\68\98\114\43\117\103\74\113\67\116\97\52\75\87\108\98\78\115\86\68\106\109\110\47\79\100\119\102\48\55\88\105\48\122\83\89\105\84\55\107\80\57\89\116\78\85\90\52\116\112\78\99\118\79\104\106\52\108\102\54\74\103\119\71\88\73\111\109\69\50\111\78\54\83\112\97\100\47\70\75\77\48\74\101\90\72\82\84\113\52\77\78\117\115\97\47\88\107\49\57\67\119\79\70\87\116\84\116\79\108\51\43\86\47\66\57\117\114\104\76\115\109\73\74\55\88\108\120\121\115\82\113\86\51\85\122\97\87\50\56\78\101\112\70\53\118\99\47\118\102\83\47\86\87\116\113\82\116\69\55\78\83\79\108\115\47\101\112\121\112\88\101\73\101\100\103\119\121\49\88\71\66\56\89\74\69\88\106\122\70\57\51\43\77\121\76\77\47\66\120\74\74\43\47\89\119\89\65\55\115\69\105\106\110\98\53\77\85\106\109\120\82\75\79\90\77\53\117\119\65\52\68\79\100\117\65\116\55\120\74\122\111\99\69\76\116\56\85\87\105\68\82\57\65\109\107\50\81\117\99\70\104\110\121\84\66\107\78\100\51\78\122\48\108\65\54\75\52\122\109\82\111\65\52\81\118\78\89\78\120\84\109\119\48\99\52\69\78\77\74\66\113\119\113\71\86\55\73\115\56\85\122\103\106\52\101\66\49\49\120\49\86\80\120\108\99\56\50\65\49\103\77\107\82\99\110\74\78\90\78\65\55\98\84\47\53\109\97\121\90\53\103\72\47\57\80\115\79\105\111\84\102\70\71\81\121\103\76\89\49\56\65\56\103\88\54\104\104\74\56\82\87\76\116\88\51\101\73\57\69\122\118\56\67\51\118\57\122\74\77\107\75\118\83\106\89\66\54\108\66\84\72\115\100\109\72\75\120\113\66\50\102\77\56\89\65\119\116\108\52\98\102\48\97\55\70\70\74\98\98\109\87\102\121\49\83\50\110\112\102\83\70\73\90\109\76\118\49\101\73\98\74\112\104\106\71\83\49\110\70\65\43\121\76\87\65\67\99\84\77\68\119\117\103\78\119\79\87\47\70\76\113\122\73\120\111\121\52\109\47\121\105\56\77\84\78\117\84\122\77\120\71\105\68\75\76\74\102\52\49\74\50\87\107\78\101\87\77\75\69\114\77\48\73\102\77\117\113\68\101\56\49\57\87\90\53\101\104\53\112\82\78\98\84\75\56\114\66\100\85\97\80\121\89\118\84\107\104\111\116\108\50\89\67\85\115\47\50\83\103\90\106\97\99\76\55\81\68\111\69\80\49\65\88\99\115\90\110\56\48\50\47\81\51\120\52\102\48\108\56\49\65\108\103\104\122\82\110\113\88\53\99\50\88\101\68\54\107\104\119\86\115\76\76\100\82\114\107\50\55\89\99\85\107\76\75\115\111\69\112\47\108\121\81\68\100\119\75\43\52\72\111\117\112\74\107\104\79\77\51\52\120\51\101\57\109\67\75\79\65\109\97\72\118\102\65\100\51\57\102\100\118\104\90\74\122\57\75\66\68\80\43\49\110\48\110\52\80\70\57\90\103\101\116\57\43\98\74\43\85\78\89\117\57\102\72\119\68\80\68\53\84\48\114\52\119\51\43\107\65\122\99\115\79\120\104\43\116\116\87\68\55\108\72\68\43\88\107\99\104\106\66\89\79\77\90\99\97\84\103\49\118\113\110\78\100\85\107\75\98\90\97\49\119\104\76\68\77\107\115\50\75\110\79\85\87\119\109\56\101\111\56\98\83\79\52\90\77\74\79\101\76\74\116\87\100\107\106\70\69\66\115\119\77\81\116\97\50\111\87\77\56\98\80\105\99\54\73\119\79\50\66\88\72\57\48\85\51\67\85\71\84\79\81\98\90\110\114\122\82\71\114\98\108\74\122\43\66\106\87\103\56\110\71\97\73\105\99\114\87\109\56\111\102\112\57\107\99\103\78\86\108\48\107\79\74\118\53\121\76\85\90\99\43\43\90\71\109\88\118\68\86\67\49\107\85\80\104\116\56\73\109\115\101\104\76\98\80\51\102\120\72\55\110\107\121\114\66\47\76\111\67\97\108\74\87\74\104\51\89\118\54\55\76\43\98\101\108\122\72\102\48\54\108\119\98\81\116\115\83\119\54\79\115\111\121\68\99\86\111\78\98\56\73\73\85\56\83\51\82\89\50\88\106\73\83\97\85\51\113\73\71\71\103\117\89\117\108\81\53\81\99\79\115\115\56\111\79\83\102\110\122\98\114\47\103\74\119\47\73\98\98\97\112\73\56\71\83\103\65\69\66\43\116\81\107\110\69\74\106\78\55\83\113\116\85\88\121\84\106\88\119\121\47\65\43\108\75\74\56\47\86\48\71\54\52\87\106\109\118\112\107\54\52\75\76\105\68\81\100\89\97\72\73\79\90\118\86\85\105\109\66\86\112\118\71\80\117\110\76\70\56\50\111\103\75\67\110\49\90\81\116\97\89\122\82\88\120\54\53\69\74\117\111\112\86\88\85\56\114\100\110\78\87\111\85\119\81\84\100\119\56\121\52\47\53\88\121\81\111\48\51\49\80\119\101\68\57\66\122\85\113\76\82\111\55\57\90\65\102\51\112\52\51\86\66\102\57\80\84\120\97\107\87\105\75\88\110\79\50\47\81\52\50\108\48\88\97\85\85\108\52\50\109\73\118\115\70\51\101\99\49\69\121\98\106\115\88\81\97\77\103\119\90\47\70\73\87\102\101\111\120\105\116\71\103\98\70\56\82\48\108\68\50\84\100\74\83\100\112\72\116\43\104\68\108\122\69\107\82\109\77\53\105\75\85\100\47\56\84\111\120\105\99\89\67\88\52\47\97\74\53\108\89\107\75\56\77\103\90\90\119\116\90\74\69\89\105\52\113\122\90\89\121\99\114\101\73\110\81\120\43\90\111\75\115\106\97\121\102\98\49\89\73\55\49\119\79\51\104\76\71\75\70\43\117\122\88\116\106\70\122\77\114\47\116\50\88\52\85\99\71\77\84\80\97\113\99\48\108\75\83\77\66\118\48\83\119\43\52\47\71\51\118\119\82\84\67\103\105\67\75\78\77\119\112\104\49\115\47\71\97\101\72\103\68\79\114\76\113\100\85\107\82\116\104\111\82\97\107\66\57\71\104\106\56\76\97\57\49\99\55\71\106\101\85\107\114\80\111\118\65\77\49\76\87\56\74\121\83\52\104\101\43\49\88\87\65\65\74\51\105\79\86\115\55\117\80\111\50\105\111\99\74\118\115\73\108\71\82\120\102\101\65\104\56\52\56\65\74\74\79\72\73\103\87\106\49\98\114\122\117\70\49\99\82\114\97\100\100\107\69\104\109\114\79\110\104\108\65\99\56\109\69\75\120\71\43\117\70\72\111\115\113\85\87\78\79\102\56\69\122\70\53\101\98\75\109\80\103\97\53\116\43\103\53\118\82\121\99\68\105\77\70\112\67\50\71\76\79\98\107\83\51\43\87\81\68\111\97\66\69\99\78\50\43\90\120\103\109\81\84\98\106\56\107\80\118\49\43\113\107\103\84\101\77\117\114\107\118\119\116\108\57\90\83\89\83\98\120\89\111\52\86\120\115\112\116\106\51\106\76\122\120\99\104\53\116\77\107\97\110\99\84\65\70\120\66\103\43\81\55\98\43\68\84\56\119\89\82\102\116\50\79\70\108\121\43\98\82\87\68\106\67\122\47\119\70\81\108\78\56\104\53\78\102\54\67\81\73\87\78\56\101\74\66\109\71\102\111\43\112\57\99\87\99\74\71\106\82\81\87\55\75\73\119\79\77\66\108\49\101\98\70\104\71\54\67\65\109\110\73\70\90\48\98\65\55\113\70\114\119\74\56\104\119\84\103\54\79\54\118\108\104\112\79\105\54\77\73\47\106\50\84\113\52\70\69\81\103\116\78\103\90\100\53\53\85\80\66\90\50\115\122\119\117\65\86\76\74\75\51\66\73\100\101\78\101\80\80\78\71\43\101\47\103\117\50\119\107\116\74\83\106\68\97\66\66\47\122\87\71\74\72\87\55\65\49\106\122\86\43\49\50\97\74\48\118\88\115\49\82\56\54\49\68\77\75\100\80\70\77\113\120\111\80\111\112\101\111\121\88\113\71\108\100\102\87\120\75\72\74\113\72\81\72\48\69\68\120\66\77\101\99\118\75\57\55\75\55\73\119\108\122\56\75\114\122\51\115\106\53\105\55\116\75\50\111\71\103\68\47\106\70\87\77\102\72\77\52\105\119\112\66\97\117\68\107\103\118\89\78\49\98\82\97\110\72\50\71\88\113\85\75\83\122\70\112\87\47\53\121\121\86\111\112\56\119\49\76\79\66\101\78\86\102\121\72\114\80\113\99\112\53\117\55\65\75\117\121\113\108\56\97\120\85\82\79\68\101\55\117\53\101\72\116\65\86\115\79\108\85\121\88\85\112\50\67\80\86\67\106\81\86\80\104\87\111\111\90\54\97\116\84\69\79\102\85\109\117\73\79\47\79\52\109\51\49\99\108\70\106\118\48\97\116\86\122\117\111\70\50\53\122\85\120\47\105\65\66\76\115\108\70\108\110\87\47\82\86\113\118\116\43\57\70\75\53\103\81\54\120\43\84\112\43\85\121\49\50\98\99\106\89\67\72\82\55\97\113\66\121\69\117\55\73\52\103\76\97\86\103\118\78\109\71\86\57\52\107\76\79\84\71\114\122\87\121\110\71\69\83\72\112\56\109\103\98\111\88\102\89\107\117\103\117\75\81\105\89\98\105\81\97\120\99\69\49\53\73\122\43\65\111\79\73\67\66\56\82\111\67\51\120\90\56\50\73\88\87\67\51\49\88\79\106\113\120\67\101\54\118\48\107\116\55\115\43\70\53\80\103\76\88\49\47\69\84\66\83\106\74\53\82\116\56\69\71\74\118\117\87\79\84\121\115\52\100\98\53\67\49\108\120\43\82\86\99\79\54\116\111\81\98\53\99\83\111\83\118\67\80\57\84\52\55\71\87\102\89\66\86\90\77\110\83\53\87\110\54\89\54\82\89\68\57\81\71\81\70\114\121\111\105\74\84\89\99\110\89\119\99\53\57\54\55\119\122\83\105\106\119\70\89\69\110\99\54\66\53\48\102\74\53\82\49\73\107\65\112\90\101\76\84\43\81\78\122\68\108\82\49\103\87\75\57\73\43\72\74\53\111\111\74\118\75\101\48\75\48\119\87\100\98\113\120\105\87\57\78\101\43\72\67\118\54\88\51\53\116\83\80\49\101\112\65\51\78\116\100\113\55\87\51\79\74\81\72\73\82\72\107\72\107\120\118\114\77\43\111\76\97\65\122\106\80\81\53\68\117\76\69\55\108\47\85\54\65\76\120\87\82\77\107\106\90\122\86\114\89\97\111\109\67\78\49\99\80\52\114\109\101\117\102\77\101\98\98\85\70\81\110\55\53\121\105\43\120\99\112\55\117\97\86\50\90\117\120\122\81\89\56\117\113\122\66\85\122\88\53\54\52\85\111\120\113\113\53\67\112\47\122\68\57\68\107\89\101\70\79\50\113\119\90\119\109\67\100\99\101\120\85\74\114\110\106\74\116\115\105\120\65\79\68\102\111\107\71\89\75\101\84\100\87\108\97\110\71\51\75\72\114\107\116\73\57\68\106\104\77\70\55\54\80\87\48\122\71\70\77\99\57\116\51\108\82\99\70\68\100\101\66\117\122\103\112\85\81\116\78\113\118\68\105\77\104\107\82\103\52\90\89\116\47\76\87\79\103\113\114\53\105\119\84\83\119\79\119\51\47\78\66\109\69\84\43\85\53\110\52\120\87\53\118\107\122\54\81\74\101\83\120\81\48\115\80\82\121\67\52\84\100\68\53\110\105\121\53\117\55\67\105\71\69\70\51\81\67\97\56\104\54\43\67\73\77\43\106\50\84\71\105\100\117\56\81\52\81\73\100\74\110\68\52\71\118\71\49\65\112\111\51\75\108\119\104\101\97\105\109\90\77\114\117\102\54\86\89\47\113\113\81\108\50\72\102\54\99\56\49\68\76\88\102\52\121\47\101\97\100\108\112\102\119\81\74\71\65\113\78\43\74\72\109\115\100\68\85\85\101\122\101\97\79\111\108\71\115\67\115\108\51\55\102\84\111\107\74\120\98\83\49\83\68\65\48\57\89\86\78\79\100\105\99\73\82\83\43\102\56\48\47\73\120\107\121\104\77\100\115\52\120\52\106\117\76\49\65\118\43\55\120\98\108\75\104\121\50\89\72\112\117\65\108\87\85\113\66\49\98\119\98\110\65\82\72\84\122\97\75\74\108\71\79\47\43\115\103\121\103\53\68\80\79\118\47\111\68\118\122\72\76\43\120\97\83\52\98\97\73\85\118\116\78\114\54\82\115\113\54\107\54\69\43\73\52\53\109\97\75\56\107\88\78\81\69\84\80\108\49\90\119\98\67\84\121\98\110\80\108\99\106\115\109\66\49\77\101\85\73\101\98\54\66\117\100\76\72\72\48\56\55\97\101\86\57\119\47\112\74\86\48\54\73\71\111\107\52\118\43\101\66\106\47\101\73\69\67\104\108\122\54\85\81\55\104\78\54\50\99\111\99\97\56\50\53\50\105\105\75\71\113\56\119\116\75\104\47\100\56\50\113\114\80\72\84\68\108\48\110\119\120\56\78\103\76\120\56\71\118\88\117\122\52\68\86\57\122\115\77\51\114\65\80\117\99\88\47\84\100\104\86\47\114\67\65\65\54\88\121\69\115\70\101\97\70\71\102\116\87\50\87\113\122\84\51\49\116\53\118\78\119\76\75\98\54\88\47\121\119\73\103\57\113\114\108\119\83\99\47\102\78\84\108\89\70\86\56\54\69\103\87\98\65\72\70\80\114\65\122\47\89\120\67\100\111\78\54\121\70\71\82\117\83\69\99\105\104\70\111\69\55\69\104\43\70\100\105\57\82\77\76\47\51\117\112\51\84\49\120\113\48\112\77\102\107\70\66\79\119\69\55\77\101\65\55\66\105\77\115\49\72\80\120\73\104\111\100\80\90\90\68\43\111\99\49\47\87\98\75\89\74\97\102\50\66\85\54\90\47\100\99\78\106\112\105\122\114\68\116\78\99\113\86\103\55\87\115\103\73\54\82\54\104\47\84\55\71\57\111\84\106\83\68\55\80\120\121\110\87\79\90\108\67\72\69\51\110\72\54\51\76\70\82\84\69\82\122\68\98\105\121\80\79\90\87\110\114\87\101\70\56\87\88\102\75\47\86\108\55\80\43\85\117\100\79\98\76\112\117\79\82\108\109\89\122\51\57\77\97\54\88\54\105\47\79\90\85\118\105\114\112\111\76\80\55\103\47\106\51\78\113\50\48\43\89\56\109\89\103\119\84\81\70\88\49\107\73\100\108\82\107\51\50\54\121\83\55\57\53\74\43\98\53\74\119\52\57\112\115\121\77\77\118\57\118\100\49\109\70\66\76\114\82\74\78\55\76\71\106\107\101\72\98\117\74\90\75\80\65\113\75\101\115\118\89\69\97\112\99\77\80\79\107\53\112\122\107\107\121\103\85\106\97\110\85\105\97\115\79\106\56\66\103\100\102\99\115\89\82\80\108\90\78\117\104\54\97\79\85\105\81\108\90\112\56\98\79\89\52\43\112\81\88\50\110\56\48\67\71\114\113\113\47\47\103\78\120\102\69\72\88\105\119\43\114\69\115\102\55\85\99\86\113\78\67\78\119\79\67\89\68\51\65\49\73\113\70\107\83\89\84\82\55\98\79\86\73\57\88\90\88\79\87\74\120\74\108\79\87\84\74\87\120\57\67\109\86\122\121\86\85\52\67\88\83\54\84\79\70\98\90\106\70\116\121\121\102\72\57\88\76\69\71\113\100\110\82\83\80\55\43\122\115\112\53\51\113\97\65\100\90\101\116\122\71\107\120\86\107\80\102\114\50\119\111\83\105\78\111\90\67\105\84\87\109\88\47\43\114\103\85\51\85\120\82\71\50\49\115\121\112\108\66\85\99\68\77\52\78\86\119\66\120\43\47\56\80\99\121\105\66\90\105\90\54\51\120\115\90\81\43\108\109\47\43\43\75\66\86\83\101\100\81\53\52\88\120\84\51\80\110\81\112\80\99\83\49\101\103\100\53\90\116\75\98\122\97\65\97\57\115\52\101\105\88\76\114\122\108\47\56\108\120\109\107\71\43\68\75\101\121\49\122\119\51\101\107\65\118\48\55\43\108\49\56\57\81\120\110\47\56\49\55\101\57\120\106\88\117\78\77\78\77\120\113\98\56\65\82\100\76\82\52\50\107\89\84\76\56\65\119\119\110\82\103\71\69\52\70\113\101\102\79\47\70\109\54\103\53\74\72\57\115\66\76\83\48\105\81\75\51\111\78\101\50\98\106\54\108\111\47\120\68\82\70\57\65\79\72\55\88\122\73\117\117\88\112\69\77\108\103\108\99\105\43\53\109\71\65\113\103\69\47\103\47\108\69\65\54\89\99\84\70\56\122\118\78\74\88\78\97\98\82\53\111\107\57\100\71\51\70\53\121\47\107\118\121\103\107\109\108\47\116\68\109\71\67\112\49\43\73\87\48\107\57\103\117\112\101\116\83\111\51\79\49\81\87\107\71\88\88\80\50\81\119\47\80\65\57\114\112\55\109\49\53\54\114\77\52\79\50\101\80\69\88\101\90\51\113\71\115\56\114\50\114\53\121\78\73\87\82\117\102\49\114\55\69\53\108\97\52\65\53\71\97\83\121\114\81\102\48\116\86\87\57\101\49\55\121\88\118\68\112\52\114\81\90\102\87\105\110\115\107\69\79\78\50\51\111\67\72\102\74\78\47\100\79\81\90\100\54\86\53\80\120\122\66\47\78\48\115\106\102\83\111\77\86\107\104\113\108\115\118\50\67\85\81\57\50\87\87\77\43\43\122\115\50\121\106\116\53\102\117\56\77\115\83\69\110\50\69\122\115\78\77\55\48\69\66\103\43\83\120\118\84\72\77\112\98\82\75\115\103\66\70\66\72\118\99\72\104\87\50\65\47\53\121\76\110\67\82\81\90\77\116\101\71\84\48\111\82\47\51\72\116\87\71\43\87\108\89\114\116\118\97\109\75\88\121\67\107\109\50\108\119\51\43\112\99\98\117\67\109\68\78\48\80\83\88\118\82\119\57\73\68\104\76\72\99\85\119\117\86\74\110\106\73\89\43\115\67\87\43\115\43\77\50\119\74\86\103\80\67\115\117\69\114\53\85\74\57\81\53\115\106\100\115\50\84\76\89\98\85\102\97\100\109\86\78\110\85\121\106\68\75\76\84\85\49\97\106\117\98\53\82\84\76\76\79\116\100\77\120\104\99\83\52\47\47\98\122\101\43\53\121\56\109\79\87\74\117\100\56\78\103\48\122\72\122\73\104\80\47\78\119\53\66\75\110\122\101\71\121\119\120\118\81\75\105\82\73\105\116\49\75\72\113\49\74\99\84\114\108\76\122\98\70\97\107\70\72\98\75\52\73\50\80\82\90\105\97\79\114\106\110\68\56\71\110\52\56\104\118\98\116\65\121\112\82\106\103\47\117\49\114\89\120\80\84\79\54\90\112\80\80\105\67\50\52\98\79\90\82\113\47\71\119\87\114\112\48\111\51\53\51\102\80\110\72\49\112\106\109\113\80\57\47\97\82\121\106\84\121\89\104\80\48\75\113\43\51\81\110\67\53\106\106\48\107\49\101\102\111\118\90\99\112\98\112\116\69\50\76\107\112\120\89\97\52\74\57\47\48\79\43\76\69\119\108\105\121\122\105\116\85\79\120\72\100\105\89\120\107\99\99\82\83\68\122\57\74\110\72\114\85\72\87\79\104\117\78\102\47\73\53\102\68\88\101\118\83\82\119\89\105\78\122\80\113\54\48\82\98\87\53\69\108\121\68\76\112\66\122\53\79\112\83\100\68\86\107\55\51\108\54\119\86\71\53\75\103\117\73\112\81\107\114\101\50\88\52\84\83\97\71\53\52\43\47\52\90\106\73\74\86\71\84\89\47\84\101\54\67\109\65\43\53\55\86\82\116\121\86\116\110\104\90\119\53\54\100\121\57\99\53\116\109\53\78\98\55\98\68\69\110\54\88\72\67\65\89\47\83\108\69\52\75\104\68\78\49\87\97\43\57\77\55\74\84\53\119\79\106\67\112\84\104\120\77\108\107\78\108\83\97\116\113\52\50\78\110\73\75\116\89\65\97\69\116\101\71\103\106\99\116\89\57\80\83\72\83\122\112\69\86\82\48\83\102\65\103\77\99\104\67\79\80\101\100\48\117\50\88\87\52\116\90\81\102\82\71\107\69\43\90\101\68\105\53\76\102\83\110\110\102\119\77\70\97\67\109\88\67\76\54\79\79\51\86\98\116\74\52\105\121\119\107\80\113\122\81\65\48\73\78\76\86\113\55\87\89\106\103\61\61";local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIII='NGI2d3Q8YSp3KmsvYWc9K0c6dw==';local karrotlIIlIIlI=function(a,b)local c=karrotlIIlIlIl(karrotlIIlIllI(a))local d=c["\99\105\112\104\101\114"](c,karrotlIIlIllI(b))return karrotlIIlIllI(d)end;local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIIl='\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110';local karrotlIIlIIII='OS5nRkJxRlY8XydZaSZ2OXdEb3t7I2EkNmcvbyxdZVYvZy86Mjg=';function karrotlIIlIlll(a,b)local c=karrotlIIlIllI(a,b);local d=karrotlIIllIlI;return c,d end;return karrotlIIlIlII(karrotlIIlIIlI(karrotlIIllIll,karrotlIIlIIIl),getfenv(0))()end)()
